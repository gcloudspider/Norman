##################################################
##
##Create Date:2015-11-18
##Author:Norman
##
##Description: Array Task
##
###################################################


	1.给数组int m[5]进行态动赋值，然后把每个元素的值增加为自身的2倍，打印出来 OK
    2.动态给数组int m[5]赋值，然后打印出其中第二大的数      OK
    3.动态初始化数组int m[5]对其中奇数求和并打印            OK
    4.动态初始化数组int m[5],int n[5],然后求出两个数组公共元素中最大的值 OK
    5.不用第三个数组，把两个等长数组的内容互换;             OK
    6.不用第二个数组，把一个数组的内容逆序;	                OK
    7.  在一个已经升序排列的数组里，还剩最后一个空余位置，请在此位置输入一个值，然后设计一个排序方法，使得该数组依然有序！										            OK
	8.一个数组中元素等于0都移动到靠后的位置，把其他非0的数值到移到靠左的位置; OK
    9.判断两个数组内容是否相等 							    OK
	10.设计一个算法可以实现128位整数加减;
	11.实现一个螺旋数组的打印;                              OK					
    12.一个整型数中，如果元素的值相同且连续的几个元素，称作数据段，请你计算一个数组中长度最大的数据段，并打印出来mZ如果有长度一样的数据段，只打印第一个出现的;             OK
    13.在一个母串里查找子串，把子串出现的次数统计并打印     OK
    14.一个字符串里的小写字母转换成大写字母并打印;	        OK
    15统计一个字符串里小写字母的每个字母各自出现的次数      OK
    16.统计一个字符串里的单词个数;						    OK
    17.实现整型数到字符串的转换;                            OK
    18:把一个字符串里的空格去掉;                            OK
    19:把一个字符串里的单词顺序逆序;                        OK
    20:考虑字符串和整数互相转换的时候，整数是负数的处理;    OK
    21:实现字符串到浮点数的转换;                            OK
    22：把一个只含有数字字符的串里面，所有奇数靠左对齐，所有偶数靠右对齐; OK
    23:把一个字符串里包含的四则运算的结果分别用整数和字符串打印出来;
	举例：
	char s[]="123+456"
	//打印
	m = 579;	
	buf[]= "579";
				
    24:求两个字符串的首次出现的最长公共子串;	
	(必须用三层循环)
	s1="12345678901234567890kkkabcdefghij";
	s2="12345671234567890333abcdefghij";
					
    25:字符串中出现的字母区间和数字区间缩写的内容展开;（假设有足够的空间）	
	例如：
	char s[1024]="a-d1-5";
	展开后是：
	abcd12345


    26:把一个字符串拼接到另一个字符串的前面;		
	举例：
	char s1[1024]="123";
	char s2[]="abc";
	//拼接后打印s1：	
	"abc123"
