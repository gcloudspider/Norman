##################################################
##
##Create Date:2015-11-18
##Author:Norman
##
##Description: Array Task
##
###################################################


	1.给数组int m[5]进行动态赋值，然后把每个元素的值增加为自身的2倍，打印出来           OK
	2.动态给数组int m[5]赋值，然后打印出其中第二大的数.                                 OK
	3.动态初始化数组int m[5],对其中奇数求和并打印;                                      OK
	4.动态初始化数组int m[5],int n[5],然后求出两个数组公共元素中最大的值;               OK
	5.不用第三个数组，把两个等长数组的内容互换;                                         OK
	6.不用第二个数组，把一个数组的内容逆序;                                             OK
	7.  在一个已经升序排列的数组里，还剩最后一个空余位置，请在此位置输入一个值，然后设计一个排序方法，使得该数组依然有序！																			    OK
	8.一个数组中元素等于0都移动到靠后的位置，把其他非0的数值到移到靠左的位置;           OK
	9.判断两个数组内容是否相等      OK                                                         

	10.设计一个算法可以实现128位整数加减;
	char	8
	short	16
	int		32
	long long	64


	11.(长期思考  deep think)                                                           OK
	实现一个螺旋数组的打印;
	举例：
	螺旋数组 6x6
	1	2	3	4	5	6
	20	21	22	23	24	7
	19	32	33	34	25	8
	18	31	36	35	26	9
	17	30	29	28	27	10
	16	15	14	13	12	11
																			
work 12:                                                                                OK
 一个整型数中，如果元素的值相同且连续的几个元素，称作数据段，请你计算一个数组中长度最大的数据段，并打印出来;如果有长度一样的数据段，只打印第一个出现的;
	举例：
	int m[]={1,1,1,2,3,4,4,4,4,5,7,8,8,8,8,9};
	其中数据段有3个1,4个4,4个8,因为4个4先出现，所有打印结果是：
	[x] 4 4 4 4
																			            
work 13:（暂时不做）                                            
在一个母串里查找子串，把子串出现的次数统计并打印;

work 14:(易)                                                                            OK
	把一个字符串里的小写字母转换成大写字母并打印;

work 15：（易）                                                                         OK
	统计一个字符串里小写字母的每个字母各自出现的次数;
	例如：
	char s[]="aaabbbddg";
	a	3
	b	3
	d	2
	g	1

work 16:（难）                                                                          OK
	统计一个字符串里的单词个数;
	this   is   a pig
	4
	
work 17:（难）
	实现整型数到字符串的转换;
	例如：
		int m=123;
		char buf[1024]={0};
	//转换过程...你来想
	printf("%s",buf);
	//打印 123

work 18:（易）
	把一个字符串里的空格去掉;例如：
	char s[]="this is a pig";
	//去掉空格...你来做

	printf("%s\n",s);
	thisisapig

work 19:（难）
	把一个字符串里的单词顺序逆序;
	例如：
		char s[]="this is a pig";
	逆序后打印s是：
		pig a is this

work 20:(必做)
	考虑字符串和整数互相转换的时候，整数是负数的处理;
	比如：
	char s[]="-123";
	m= -200;

work 21:（必做）
	实现字符串到浮点数的转换;
	char s[]="123.456";
	float f= 123.456;

work 22：（难）
	把一个只含有数字字符的串里面，所有奇数靠左对齐，所有偶数靠右对齐;

	例如：
	char s[]="1234567890";
	转换后：(不考虑排序)	
	s="1357924680";
						
work 23:（难）
	把一个字符串里包含的四则运算的结果分别用整数和字符串打印出来;
	
	举例：
	char s[]="123+456"
	//打印
	m = 579;	
	buf[]= "579";
				
work 24:(长期思考)
	求两个字符串的首次出现的最长公共子串;
	
	(必须用三层循环)
	s1="12345678901234567890kkkabcdefghij";
	s2="12345671234567890333abcdefghij";
					
work 25:(周末题目)
	把字符串中出现的字母区间和数字区间缩写的内容展开;（假设有足够的空间）
	
	例如：
	char s[1024]="a-d1-5";
	展开后是：
	abcd12345


work 26:(周末)

	把一个字符串拼接到另一个字符串的前面;
		
	举例：
	char s1[1024]="123";
	char s2[]="abc";
	//拼接后打印s1：	
	"abc123"
